/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import javax.swing.table.DefaultTableModel;

import dao.NhanVienDAO;
import entity.NhanVien;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author NHU NGOC
 */
public class PnlDSNhanVien extends javax.swing.JPanel {

	private DefaultTableModel tModel;
	private NhanVienDAO nhanVienDAO;

	/**
	 * Creates new form pnlQLNhanVien
	 */
	public PnlDSNhanVien() {
		initComponents();
                docDLVaoTable();
	}
        public void hienThiThongBao(String thongBao, JTextField txt){
        JOptionPane.showMessageDialog(null, thongBao);
        if(txt == null)
            return;
        txt.requestFocus();
        }
        
        public boolean kiemTraDuLieu() {
        if (txtTenNV.getText().equals("")) {
            hienThiThongBao("Tên nhân viên không được để trống!", txtTenNV);
            return false;
        }
        if (!(txtTenNV.getText().trim().matches("\\p{L}+(\\s\\p{L}+)+"))) {
            hienThiThongBao("Tên nhân viên không được có kí tự đặc biệt và tối thiểu 2 từ!", txtTenNV);
            return false;
        }
        
        Date ngaySinh = jDateNgaySinh.getDate(); // Lấy Date từ JDateChooser

        Calendar cal = Calendar.getInstance(); // Khởi tạo Calendar
        cal.setTime(ngaySinh); // Đặt thời gian cho Calendar

        if (LocalDate.now().getYear() - cal.get(Calendar.YEAR) < 18) { // So sánh tuổi
            hienThiThongBao("nhân viên phải đủ 18 tuổi trở lên!", null);
            return false;
        }
        
        if (txtCCCD.getText().equals("")) {
            hienThiThongBao("CCCD không được để trống!", txtCCCD);
            return false;
        }
        if (!(txtCCCD.getText().trim().matches("[0-9]{12}"))) {
            hienThiThongBao("CCCD phải gồm 12 số!", txtCCCD);
            return false;
        }
        
        if (txtDiaChi.getText().trim().equals("")) {
            hienThiThongBao("Địa chỉ không được để trống!", txtDiaChi);
            return false;
        }
        
        if (txtSDT.getText().equals("")) {
            hienThiThongBao("Số điện thoại không được để trống!", txtSDT);
            return false;
        }
        if (!(txtSDT.getText().trim().matches("0[1-9][0-9]{8}|0[1-9][0-9]{9}"))) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 số hoặc 11 số và bắt đầu bằng số 0 và số thứ 2 khác 0!");
            txtSDT.requestFocus();
            return false;
        }
        
        if (cbxChucVu.getSelectedIndex() == 0) {
            hienThiThongBao("Vui lòng chọn chức vụ! ", null);
            return false;
        }
//        if (cbxChucVu.getSelectedItem()== "NhanVien") {
//            if(txtMaNVQL.getText().equals("")) 
//                hienThiThongBao("Mã nhân viên quản lý không được để trống!", null);
//            return false;
//        }
        return true;
    }
        
        public void xoaKhachHang(){
        int row = tblDSNV.getSelectedRow();
        if(row == -1)
            hienThiThongBao("Chọn khách hàng cần xóa", null);
        else{
            String ma = tblDSNV.getValueAt(row, 0).toString();
            int op = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không","delete",JOptionPane.YES_NO_OPTION);
            if(op == JOptionPane.YES_OPTION){
                try {
                    if(nhanVienDAO.xoaNhanVien(ma)){
                        hienThiThongBao("Xóa thành công", null);
                        clearTable();
                        docDLVaoTable();
                    }
                    else{
                        hienThiThongBao("Xóa thất bại", null);
                        return;
                    }
                } catch (Exception ex) {
                    Logger.getLogger(PnlDSNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        }
    }
        
        
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTieuDe = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        pnlThongTinNV = new javax.swing.JPanel();
        lblMaNV = new javax.swing.JLabel();
        lblTenNV = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblCCCD = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        txtCCCD = new javax.swing.JTextField();
        lblDiaChi = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblChucVu = new javax.swing.JLabel();
        cbxChucVu = new javax.swing.JComboBox<>();
        jDateNgaySinh = new com.toedter.calendar.JDateChooser();
        lblMaNVQL = new javax.swing.JLabel();
        txtMaNVQL = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        btnCapNhatNV = new javax.swing.JButton();
        btnXoaNV = new javax.swing.JButton();
        btnXoaTrangTT = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSNV = new javax.swing.JTable();
        btnThemNV = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1307, 740));

        pnlTieuDe.setBackground(new java.awt.Color(0, 153, 153));

        lblTieuDe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTieuDe.setText("DANH SÁCH NHÂN VIÊN");

        javax.swing.GroupLayout pnlTieuDeLayout = new javax.swing.GroupLayout(pnlTieuDe);
        pnlTieuDe.setLayout(pnlTieuDeLayout);
        pnlTieuDeLayout.setHorizontalGroup(
            pnlTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTieuDeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTieuDe)
                .addGap(551, 551, 551))
        );
        pnlTieuDeLayout.setVerticalGroup(
            pnlTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTieuDeLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(lblTieuDe)
                .addContainerGap())
        );

        pnlThongTinNV.setBackground(new java.awt.Color(204, 204, 204));
        pnlThongTinNV.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin nhân viên"));

        lblMaNV.setText("Mã nhân viên:");

        lblTenNV.setText("Tên nhân viên:");

        lblNgaySinh.setText("Ngày sinh:");

        lblCCCD.setText("CCCD:");

        lblDiaChi.setText("Địa chỉ:");

        lblSDT.setText("Số điện thoại:");

        lblChucVu.setText("Chức vụ:");

        cbxChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chức vụ--", "QuanLy", "NhanVien" }));
        cbxChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxChucVuActionPerformed(evt);
            }
        });

        lblMaNVQL.setText("Mã nhân viên quản lý:");

        javax.swing.GroupLayout pnlThongTinNVLayout = new javax.swing.GroupLayout(pnlThongTinNV);
        pnlThongTinNV.setLayout(pnlThongTinNVLayout);
        pnlThongTinNVLayout.setHorizontalGroup(
            pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblMaNV))
                    .addComponent(lblCCCD, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTenNV, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99)
                .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                                .addComponent(lblDiaChi)
                                .addGap(18, 18, 18)
                                .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                                .addComponent(lblSDT)
                                .addGap(18, 18, 18)
                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(lblChucVu)
                            .addGap(18, 18, 18)
                            .addComponent(cbxChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                        .addComponent(lblMaNVQL)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaNVQL, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        pnlThongTinNVLayout.setVerticalGroup(
            pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDiaChi)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSDT)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbxChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChucVu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaNVQL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaNVQL)))
                    .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lblMaNV))
                            .addGroup(pnlThongTinNVLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenNV)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNgaySinh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCCCD))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCapNhatNV.setBackground(new java.awt.Color(0, 153, 255));
        btnCapNhatNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnCapNhatNV.setText("Cập nhật");
        btnCapNhatNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatNVActionPerformed(evt);
            }
        });

        btnXoaNV.setBackground(new java.awt.Color(255, 102, 102));
        btnXoaNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnXoaNV.setText("Xóa");
        btnXoaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNVActionPerformed(evt);
            }
        });

        btnXoaTrangTT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eraser.png"))); // NOI18N
        btnXoaTrangTT.setText("Xóa trắng");
        btnXoaTrangTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangTTActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(0, 204, 0));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(255, 102, 102));
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/out.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        String[] heads = { "Mã NV", "Tên nhân viên", "Ngày sinh", "CCCD", "Địa chỉ", "Số điện thoại", "Chức vụ",
            "Mã người quản lý" };
        tModel = new DefaultTableModel(heads, 0);
        tblDSNV.setModel(tModel);
        tblDSNV.setGridColor(new java.awt.Color(153, 153, 153));
        tblDSNV.setSelectionBackground(new java.awt.Color(0, 102, 204));
        tblDSNV.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblDSNV.setShowGrid(true);
        tblDSNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSNV);
        if (tblDSNV.getColumnModel().getColumnCount() > 0) {
            tblDSNV.getColumnModel().getColumn(0).setHeaderValue("Mã NV");
            tblDSNV.getColumnModel().getColumn(1).setHeaderValue("Tên nhân viên");
            tblDSNV.getColumnModel().getColumn(2).setHeaderValue("Ngày sinh");
            tblDSNV.getColumnModel().getColumn(3).setHeaderValue("CCCD");
            tblDSNV.getColumnModel().getColumn(4).setHeaderValue("Địa chỉ");
            tblDSNV.getColumnModel().getColumn(5).setHeaderValue("Số điện thoại");
            tblDSNV.getColumnModel().getColumn(6).setHeaderValue("Chức vụ");
            tblDSNV.getColumnModel().getColumn(7).setHeaderValue("NV quản lý");
        }

        btnThemNV.setBackground(new java.awt.Color(102, 255, 0));
        btnThemNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnThemNV.setText("Thêm");
        btnThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(pnlThongTinNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(btnThemNV)
                        .addGap(41, 41, 41)
                        .addComponent(btnCapNhatNV)
                        .addGap(45, 45, 45)
                        .addComponent(btnXoaNV)
                        .addGap(42, 42, 42)
                        .addComponent(btnXoaTrangTT)
                        .addGap(49, 49, 49)
                        .addComponent(btnLuu)
                        .addGap(40, 40, 40)
                        .addComponent(btnThoat)))
                .addContainerGap(171, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlThongTinNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhatNV)
                    .addComponent(btnXoaNV)
                    .addComponent(btnXoaTrangTT)
                    .addComponent(btnLuu)
                    .addComponent(btnThoat)
                    .addComponent(btnThemNV))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDSNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSNVMouseClicked
            try {
                // TODO add your handling code here:
                napDLVaoTextField();
            } catch (Exception ex) {
                Logger.getLogger(PnlDSNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_tblDSNVMouseClicked

    private void btnXoaTrangTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangTTActionPerformed
        // TODO add your handling code here:
        clearTextFields();
    }//GEN-LAST:event_btnXoaTrangTTActionPerformed

    private void btnCapNhatNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatNVActionPerformed
        // TODO add your handling code here:
        if(btnCapNhatNV.getText().equals("Cập nhật")){
            int row = tblDSNV.getSelectedRow();
            if(row == -1)
                hienThiThongBao("Chưa chọn sản phẩm",null );
            else{
                //moKhoaTextfield(true);
                moKhoaControls(false);
                btnLuu.setEnabled(true);
                btnCapNhatNV.setEnabled(true);
                btnXoaTrangTT.setEnabled(true);
                btnCapNhatNV.setText("Hủy");
            }
        }
        else if(btnCapNhatNV.getText().equals("Hủy")){
            //moKhoaTextfield(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnXoaTrangTT.setEnabled(true);
            btnCapNhatNV.setText("Cập nhật");
        }
        
        
    }//GEN-LAST:event_btnCapNhatNVActionPerformed

    private void btnThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNVActionPerformed
        // TODO add your handling code here:
        if(evt.getSource().equals(btnThemNV)){
                if(btnThemNV.getText().equals("Hủy")){ 
                    moKhoaControls(true);
                    //moKhoaTextfield(false);
                    clearTextFields();
                    btnThemNV.setEnabled(true);
                    btnLuu.setEnabled(false);
                    btnThemNV.setText("Thêm");
                    txtTenNV.setEditable(false);
            }
            else{
                txtMaNV.setText(taoMaMoi());
                txtTenNV.requestFocus();
                moKhoaControls(false);
                //moKhoaTextfield(true);
                btnThemNV.setEnabled(true);
                btnLuu.setEnabled(true);
                btnThemNV.setText("Hủy");
            }
        }
    }//GEN-LAST:event_btnThemNVActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if(btnThemNV.getText().equals("Hủy")){
            if(kiemTraDuLieu()){
               themNhanVien();
               moKhoaControls(true);
               //moKhoaTextfield(false);
               clearTextFields();
               btnLuu.setEnabled(false);
               btnThemNV.setText("Thêm");
               txtTenNV.setText("");
            }
        }
        if(btnCapNhatNV.getText().equals("Hủy")){
            if(kiemTraDuLieu()){
               capNhatNhanVien();
               //moKhoaTextfield(false);
               clearTextFields();
               moKhoaControls(true);
               btnLuu.setEnabled(false);
               btnXoaTrangTT.setEnabled(false);
               btnLuu.setText("Lưu");
               btnCapNhatNV.setText("Cập nhật");
               txtTenNV.setText("");
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNVActionPerformed
        // TODO add your handling code here:
        xoaKhachHang();
        clearTable();
        docDLVaoTable();
    }//GEN-LAST:event_btnXoaNVActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        ManHinhChinh.getPnlChuongTrinh().removeAll();
        ManHinhChinh.getPnlChuongTrinh().repaint();
        ManHinhChinh.getPnlChuongTrinh().revalidate();
    }//GEN-LAST:event_btnThoatActionPerformed

	private void cbxChucVuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbxChucVuActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_cbxChucVuActionPerformed

	private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTenNVActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtTenNVActionPerformed

	private void docDLVaoTable() {
		ArrayList<NhanVien> listNV;
		nhanVienDAO = new NhanVienDAO();
		listNV = nhanVienDAO.getListNhanVien();
		for (NhanVien nv : listNV) {
			tModel.addRow(new Object[] { nv.getMaNV(), nv.getTenNV(), nv.getNgaySinh(), nv.getcCCD(), nv.getDiaChi(),
					nv.getsDT(), nv.getChucVu(), nv.getNvQuanLy().getMaNV() });
		}

	}

	public void clearTextFields() {
		txtMaNV.setText("");
		txtTenNV.setText("");
		jDateNgaySinh.setEnabled(true);
		Calendar cal = Calendar.getInstance();
		try {
			cal.setTime(new Date());
		} catch (Exception e) {
			e.printStackTrace();
		}
		txtCCCD.setText("");
		txtSDT.setText("");
		txtDiaChi.setText("");
                cbxChucVu.setSelectedIndex(0);
                txtMaNVQL.setText("");
	}

    private void napDLVaoTextField() throws Exception {
	int n = tblDSNV.getSelectedRow();
	if (n == -1) {
		return;
	}
	ArrayList<NhanVien> listNV = new ArrayList<>();
	listNV = nhanVienDAO.timNhanVienVoiMaNV(tModel.getValueAt(n, 0).toString());
	for (NhanVien nv : listNV) {
            txtMaNV.setText(tModel.getValueAt(n, 0).toString());
            txtTenNV.setText(nv.getTenNV());
            jDateNgaySinh.setEnabled(true);
            String date = tModel.getValueAt(n, 2).toString();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date dateFormat = format.parse(date);
            
            jDateNgaySinh.setDate(dateFormat);
            jDateNgaySinh.setEnabled(false);
            txtCCCD.setText(nv.getcCCD());
            txtDiaChi.setText(tModel.getValueAt(n, 4).toString());
            txtSDT.setText(nv.getsDT());
            if (nv.getNvQuanLy().getMaNV() == null) {
                cbxChucVu.setSelectedItem("QuanLy");
            } else {
		cbxChucVu.setSelectedItem("NhanVien");
		}
            txtMaNVQL.setText(nv.getNvQuanLy().getMaNV());
	}
    }
        
     private void moKhoaControls(boolean b){
        btnCapNhatNV.setEnabled(b);
        btnLuu.setEnabled(b);
        btnThemNV.setEnabled(b);
        btnThoat.setEnabled(b);
        btnXoaTrangTT.setEnabled(b);
        btnXoaNV.setEnabled(b);
    }
    private void clearTable(){
        DefaultTableModel model = (DefaultTableModel) tblDSNV.getModel();
        model.setRowCount(0);
    }
    
    private String taoMaMoi() {
		String maCuoi = null;
		try {
			maCuoi = nhanVienDAO.getMaNVCuoi().trim().substring(2);
		} catch (Exception e) {
			if (maCuoi == null) {
				return "KH001";
			}
		}

		int ma = Integer.parseInt(maCuoi);
		String maMoi = String.format("NV%03d", ma + 1);
		return maMoi;
	}
    
    public void themNhanVien(){
                //
                String maNV = txtMaNV.getText().trim();
                String tenNV = txtTenNV.getText().trim();
                Date ngaySinh = jDateNgaySinh.getDate();
                String cCCD = txtCCCD.getText().trim();
                String diaChi = txtDiaChi.getText();
                String sdt = txtSDT.getText().trim();
                String chucVu = cbxChucVu.getSelectedItem().toString();
                String idQL = txtMaNVQL.getText().trim();
                NhanVien quanLy = new NhanVien(idQL);
                
                
                NhanVien nv = new NhanVien(maNV, tenNV,ngaySinh, cCCD, diaChi, sdt, chucVu, quanLy );
               
            try {
                if(nhanVienDAO.themNhanVien(nv)){
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    clearTable();
                    docDLVaoTable();
                }
                else
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
            } catch (Exception ex) {
                Logger.getLogger(PnlDSNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
    
    
    public  void capNhatNhanVien(){
        int op = JOptionPane.showConfirmDialog(this,
                "Bạn có chắc chắn muốn cập nhật thông tin không",
                "Cập nhật",
                JOptionPane.YES_NO_OPTION);
        if(op == JOptionPane.YES_OPTION){
                String maNV = txtMaNV.getText().trim();
                String tenNV = txtTenNV.getText().trim();
                Date ngaySinh = jDateNgaySinh.getDate();
                String cCCD = txtCCCD.getText().trim();
                String diaChi = txtDiaChi.getText();
                String sdt = txtSDT.getText().trim();
                String chucVu = cbxChucVu.getSelectedItem().toString();
                String idQL = txtMaNVQL.getText().trim();
                NhanVien quanLy = new NhanVien(idQL);
                
                NhanVien nv = new NhanVien(maNV, tenNV,ngaySinh, cCCD, diaChi, sdt, chucVu, quanLy );
                
            try {
                if(nhanVienDAO.capNhatNhanVien(nv)){
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    clearTable();
                    docDLVaoTable();
                }
                else
                    JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
            } catch (Exception ex) {
                Logger.getLogger(PnlDSNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatNV;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThemNV;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoaNV;
    private javax.swing.JButton btnXoaTrangTT;
    private javax.swing.JComboBox<String> cbxChucVu;
    private com.toedter.calendar.JDateChooser jDateNgaySinh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCCCD;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaNVQL;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JPanel pnlThongTinNV;
    private javax.swing.JPanel pnlTieuDe;
    private javax.swing.JTable tblDSNV;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMaNVQL;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
}
